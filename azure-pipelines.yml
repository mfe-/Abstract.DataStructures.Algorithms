# Starter pipeline


# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'build and and run tests'

- task: DotNetCoreCLI@2
  displayName: build solution
  inputs:
    command: 'build'
    projects: 'DataStructures.sln'
    arguments: '--configuration=Release --verbosity=n'

- script: dotnet test DataStructures.sln --logger trx  --collect "Code coverage"
- task: PublishTestResults@2
  displayName: publish test results
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: DotNetCoreCLI@2
  displayName: create nuget
  condition: succeededOrFailed()
  inputs:
    command: 'pack'
    packagesToPack: '**/DataStructures.csproj'
    includesymbols: true
    includesource: true
    versioningScheme: 'byBuildNumber'
    verbosityPack: 'Normal'
    

# - task: NuGetCommand@2
#   displayName: push created nupkg
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
#     nuGetFeedType: 'internal'
#     publishVstsFeed: '3bf81259-ccfe-4071-b8f8-bb5f44d4a8fb'
#     allowPackageConflicts: true
