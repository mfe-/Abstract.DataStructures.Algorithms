<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Get.UI.Base"
    >

    <!-- Connector Style -->
    <Style TargetType="{x:Type local:Connector}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Cursor" Value="Cross"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Connector}">
                    <Grid>
                        <!-- transparent extra space makes connector easier to hit -->
                        <Rectangle Fill="Transparent" Margin="-2"/>
                        <Rectangle Fill="Lavender" StrokeThickness="1" Stroke="#AA000080"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ConnectorDecoratorTemplate Default Template -->
    <ControlTemplate x:Key="ConnectorDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid Margin="-5">
            <local:Connector Orientation="Left" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <local:Connector Orientation="Top" VerticalAlignment="Top" HorizontalAlignment="Center"/>
            <local:Connector Orientation="Right" VerticalAlignment="Center" HorizontalAlignment="Right"/>
            <local:Connector Orientation="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
        </Grid>
    </ControlTemplate>

    <!-- DragThumb Default Template -->
    <Style TargetType="{x:Type local:MoveAbelItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MoveAbelItem}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--
    ControlTemplate of DesignerItem. Makes Controls which are set in the Content Propertie of the DesignerItem move abel.
    -->
    <Style TargetType="{x:Type local:DesignerItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DesignerItem}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}">
                        <!--Here we place our MoveAbelItem control to give the contentpresenter the ability that it can be moved-->
                        <!-- moveabel item ist schuld, dass grid angezeigt wird-->
                        <local:MoveAbelItem x:Name="PART_MoveAbelItem" Cursor="SizeAll"/>
                        <!--The ContentPresenter can be anycontrol which should be maked moveabel -->
                        <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch" Content="{TemplateBinding ContentControl.Content}" Margin="{TemplateBinding ContentControl.Padding}" />
                        <local:ResizeDecorator x:Name="PART_DesignerItemDecorator" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_DesignerItemDecorator" Property="ShowDecorator" Value="True" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_DesignerItemDecorator" Property="ShowDecorator" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type local:ToolboxItem}">
        <Setter Property="Control.Padding"
                Value="5" />
        <Setter Property="ContentControl.HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="ContentControl.VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="ToolTip"
                Value="{Binding ToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToolboxItem}">
                    <Grid>
                        <Rectangle Name="Border"
                                   StrokeThickness="1"
                                   StrokeDashArray="2"
                                   Fill="Transparent"
                                   SnapsToDevicePixels="true" />
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Stroke"
                                    Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Toolbox}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Margin="0,5,0,5"
                               ItemHeight="{Binding Path=DefaultItemSize.Height, RelativeSource={RelativeSource AncestorType=local:Toolbox}}"
                               ItemWidth="{Binding Path=DefaultItemSize.Width, RelativeSource={RelativeSource AncestorType=local:Toolbox}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ResizeChrome}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ResizeChrome}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Shape}" x:Key="ThumbCorner">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="Stroke" Value="LightSlateGray" />
                            <Setter Property="StrokeThickness" Value=".5" />
                            <Setter Property="Width" Value="7" />
                            <Setter Property="Height" Value="7" />
                            <Setter Property="Margin" Value="-2" />
                            <Setter Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush Center="0.3, 0.3" GradientOrigin="0.3, 0.3" RadiusX="0.7" RadiusY="0.7">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="DarkSlateGray" Offset="0.9" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid IsHitTestVisible="False" Opacity="1" Margin="-3">
                            <Rectangle SnapsToDevicePixels="True" StrokeThickness="1" Margin="1">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0, 0" EndPoint="1, .3" Opacity=".7">
                                        <GradientStop Color="SlateGray" Offset="0" />
                                        <GradientStop Color="LightGray" Offset=".5" />
                                        <GradientStop Color="SlateGray" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                            </Rectangle>
                            <!--4 vertices around the item-->
                            <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top" />

                            <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top" />
<!-- hier die connector rein stecken-->
                            <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Top" />
                            <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Bottom" />
                            <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Bottom" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
